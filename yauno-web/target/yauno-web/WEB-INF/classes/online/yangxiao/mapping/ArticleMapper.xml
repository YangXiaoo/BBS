<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="online.yangxiao.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="online.yangxiao.entity.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="top" jdbcType="VARCHAR" property="top" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="upvote" jdbcType="INTEGER" property="upvote" />
    <result column="downvote" jdbcType="INTEGER" property="downvote" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="browse" jdbcType="INTEGER" property="browse" />
    <result column="favorite" jdbcType="INTEGER" property="favorite" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="online.yangxiao.entity.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, category_id, title, pic, description, top, status, upvote, downvote, 
    comment_count, browse, favorite, create_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="online.yangxiao.entity.Article">
    insert into article (id, user_id, category_id, 
      title, pic, description, 
      top, status, upvote, 
      downvote, comment_count, browse, 
      favorite, create_time, content
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{top,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{upvote,jdbcType=INTEGER}, 
      #{downvote,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, #{browse,jdbcType=INTEGER}, 
      #{favorite,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="online.yangxiao.entity.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="top != null">
        top,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="upvote != null">
        upvote,
      </if>
      <if test="downvote != null">
        downvote,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="browse != null">
        browse,
      </if>
      <if test="favorite != null">
        favorite,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="top != null">
        #{top,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="upvote != null">
        #{upvote,jdbcType=INTEGER},
      </if>
      <if test="downvote != null">
        #{downvote,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="browse != null">
        #{browse,jdbcType=INTEGER},
      </if>
      <if test="favorite != null">
        #{favorite,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="online.yangxiao.entity.Article">
    update article
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="top != null">
        top = #{top,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="upvote != null">
        upvote = #{upvote,jdbcType=INTEGER},
      </if>
      <if test="downvote != null">
        downvote = #{downvote,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="browse != null">
        browse = #{browse,jdbcType=INTEGER},
      </if>
      <if test="favorite != null">
        favorite = #{favorite,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="online.yangxiao.entity.Article">
    update article
    set user_id = #{userId,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      top = #{top,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      upvote = #{upvote,jdbcType=INTEGER},
      downvote = #{downvote,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      browse = #{browse,jdbcType=INTEGER},
      favorite = #{favorite,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="online.yangxiao.entity.Article">
    update article
    set user_id = #{userId,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      top = #{top,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      upvote = #{upvote,jdbcType=INTEGER},
      downvote = #{downvote,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      browse = #{browse,jdbcType=INTEGER},
      favorite = #{favorite,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>