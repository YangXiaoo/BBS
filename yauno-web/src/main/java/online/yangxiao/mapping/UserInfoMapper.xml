<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="online.yangxiao.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="online.yangxiao.entity.UserInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="following" jdbcType="INTEGER" property="following" />
    <result column="follower" jdbcType="INTEGER" property="follower" />
    <result column="hobbies" jdbcType="VARCHAR" property="hobbies" />
    <result column="article" jdbcType="INTEGER" property="article" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, gender, following, follower, hobbies, article, description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="online.yangxiao.entity.UserInfo">
    insert into user_info (id, user_id, gender, 
      following, follower, hobbies, 
      article, description)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{gender,jdbcType=CHAR}, 
      #{following,jdbcType=INTEGER}, #{follower,jdbcType=INTEGER}, #{hobbies,jdbcType=VARCHAR}, 
      #{article,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="online.yangxiao.entity.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="following != null">
        following,
      </if>
      <if test="follower != null">
        follower,
      </if>
      <if test="hobbies != null">
        hobbies,
      </if>
      <if test="article != null">
        article,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="following != null">
        #{following,jdbcType=INTEGER},
      </if>
      <if test="follower != null">
        #{follower,jdbcType=INTEGER},
      </if>
      <if test="hobbies != null">
        #{hobbies,jdbcType=VARCHAR},
      </if>
      <if test="article != null">
        #{article,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="online.yangxiao.entity.UserInfo">
    update user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="following != null">
        following = #{following,jdbcType=INTEGER},
      </if>
      <if test="follower != null">
        follower = #{follower,jdbcType=INTEGER},
      </if>
      <if test="hobbies != null">
        hobbies = #{hobbies,jdbcType=VARCHAR},
      </if>
      <if test="article != null">
        article = #{article,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="online.yangxiao.entity.UserInfo">
    update user_info
    set user_id = #{userId,jdbcType=INTEGER},
      gender = #{gender,jdbcType=CHAR},
      following = #{following,jdbcType=INTEGER},
      follower = #{follower,jdbcType=INTEGER},
      hobbies = #{hobbies,jdbcType=VARCHAR},
      article = #{article,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="online.yangxiao.entity.UserInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="following" jdbcType="INTEGER" property="following" />
    <result column="follower" jdbcType="INTEGER" property="follower" />
    <result column="hobbies" jdbcType="VARCHAR" property="hobbies" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, gender, following, follower, hobbies, description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="online.yangxiao.entity.UserInfo">
    insert into user_info (id, user_id, gender, 
      following, follower, hobbies, 
      description)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{gender,jdbcType=CHAR}, 
      #{following,jdbcType=INTEGER}, #{follower,jdbcType=INTEGER}, #{hobbies,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="online.yangxiao.entity.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="following != null">
        following,
      </if>
      <if test="follower != null">
        follower,
      </if>
      <if test="hobbies != null">
        hobbies,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="following != null">
        #{following,jdbcType=INTEGER},
      </if>
      <if test="follower != null">
        #{follower,jdbcType=INTEGER},
      </if>
      <if test="hobbies != null">
        #{hobbies,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="online.yangxiao.entity.UserInfo">
    update user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="following != null">
        following = #{following,jdbcType=INTEGER},
      </if>
      <if test="follower != null">
        follower = #{follower,jdbcType=INTEGER},
      </if>
      <if test="hobbies != null">
        hobbies = #{hobbies,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="online.yangxiao.entity.UserInfo">
    update user_info
    set user_id = #{userId,jdbcType=INTEGER},
      gender = #{gender,jdbcType=CHAR},
      following = #{following,jdbcType=INTEGER},
      follower = #{follower,jdbcType=INTEGER},
      hobbies = #{hobbies,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>