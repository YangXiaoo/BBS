<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="online.yangxiao.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="online.yangxiao.entity.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="pcomment_id" jdbcType="INTEGER" property="pcommentId" />
    <result column="upvote" jdbcType="INTEGER" property="upvote" />
    <result column="downvote" jdbcType="INTEGER" property="downvote" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="viewed" jdbcType="VARCHAR" property="viewed" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="online.yangxiao.entity.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, article_id, pcomment_id, upvote, downvote, status, viewed, create_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="online.yangxiao.entity.Comment">
    insert into comment (id, user_id, article_id, 
      pcomment_id, upvote, downvote, 
      status, viewed, create_time, 
      content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, 
      #{pcommentId,jdbcType=INTEGER}, #{upvote,jdbcType=INTEGER}, #{downvote,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{viewed,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="online.yangxiao.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="pcommentId != null">
        pcomment_id,
      </if>
      <if test="upvote != null">
        upvote,
      </if>
      <if test="downvote != null">
        downvote,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="viewed != null">
        viewed,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="pcommentId != null">
        #{pcommentId,jdbcType=INTEGER},
      </if>
      <if test="upvote != null">
        #{upvote,jdbcType=INTEGER},
      </if>
      <if test="downvote != null">
        #{downvote,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="viewed != null">
        #{viewed,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="online.yangxiao.entity.Comment">
    update comment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="pcommentId != null">
        pcomment_id = #{pcommentId,jdbcType=INTEGER},
      </if>
      <if test="upvote != null">
        upvote = #{upvote,jdbcType=INTEGER},
      </if>
      <if test="downvote != null">
        downvote = #{downvote,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="viewed != null">
        viewed = #{viewed,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="online.yangxiao.entity.Comment">
    update comment
    set user_id = #{userId,jdbcType=INTEGER},
      article_id = #{articleId,jdbcType=INTEGER},
      pcomment_id = #{pcommentId,jdbcType=INTEGER},
      upvote = #{upvote,jdbcType=INTEGER},
      downvote = #{downvote,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      viewed = #{viewed,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="online.yangxiao.entity.Comment">
    update comment
    set user_id = #{userId,jdbcType=INTEGER},
      article_id = #{articleId,jdbcType=INTEGER},
      pcomment_id = #{pcommentId,jdbcType=INTEGER},
      upvote = #{upvote,jdbcType=INTEGER},
      downvote = #{downvote,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      viewed = #{viewed,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>